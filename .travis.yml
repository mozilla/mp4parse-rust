language: rust
rust:
  - stable
  - nightly

os:
  - linux
  - osx
  - windows

env:
  matrix:
    - RELEASE=
    - RELEASE=--release

install:
  # rustfmt may not always be available in nightly
  - if [[ "$TRAVIS_RUST_VERSION" != *nightly* ]]; then rustup component add rustfmt; fi
  # cargo-fuzz supports x86-64 Linux and x86-64 macOS, but macOS currently fails, see:
  # https://github.com/mozilla/mp4parse-rust/pull/210#issuecomment-597420191
  - if [[ "$TRAVIS_RUST_VERSION" == *nightly* ]] && [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      cargo install cargo-fuzz;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      TARGET=x86_64-pc-windows-msvc;
      rustup target add $TARGET;
    fi

script:
  # We cannot run `cargo test` with the mp4parse_fallible feature enabled
  # (see comment where the feature is defined in mp4parse_capi/Cargo.toml),
  # but we can at least check for changes behind features that would break the
  # build.
  - cargo check --all --verbose $RELEASE --tests --all-features
  - cargo test --all --verbose $RELEASE ${TARGET:+--target=$TARGET}
  - cargo doc --package mp4parse_capi
  # The `false` after `echo` is necessary to avoid false negatives due to `echo` returning success
  - if [[ "$TRAVIS_RUST_VERSION" != *nightly* ]]; then
      cargo fmt -- --check || (echo "Please reformat your code with 'cargo fmt' (version $(cargo fmt -- --version))"; false);
    fi
  - if [[ "$TRAVIS_RUST_VERSION" == nightly ]] && [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      cd mp4parse_capi;
      cargo fuzz build;
    fi

